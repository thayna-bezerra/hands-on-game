# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hands-on-game.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import math
import sys

import cv2
import numpy as np
from cvzone.ClassificationModule import Classifier
from cvzone.HandTrackingModule import HandDetector
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *

class Worker1(QThread):
    def __init__(self, interface):
        super().__init__()
        self.interface = interface

    ImageUpdate = pyqtSignal(QImage)
    def run(self):
        self.ThreadActive = True
        cap = cv2.VideoCapture(0)

        detector = HandDetector(maxHands=1)
        classifier = Classifier("Model/keras_model.h5", "Model/labels.txt")
        offset = 20
        imgSize = 300
        labels = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]

        while self.ThreadActive:
            success, img = cap.read()
            if success:
                img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
                imgOutput = img.copy()
                hands, img = detector.findHands(img)
                if hands:
                    hand = hands[0]
                    x, y, w, h = hand['bbox']

                    imgWhite = np.ones((imgSize, imgSize, 3), np.uint8)*255
                    imgCrop = img[y-offset:y+h+offset, x-offset:x+w+offset]

                    aspectRatio = h/w

                    height = imgCrop.shape[0]
                    width = imgCrop.shape[1]

                    if aspectRatio > 1:
                        k = imgSize/h
                        wCal = math.ceil(k * w)
                        if (height != 0 and width != 0):
                                imgResize = cv2.resize(imgCrop, (wCal, imgSize), interpolation=cv2.INTER_CUBIC)
                                wGap = math.ceil((imgSize - wCal) / 2)
                                imgWhite[:, wGap:wCal+wGap] = imgResize
                                prediction, index = classifier.getPrediction(imgWhite, draw=False)
                                print(prediction, index)

                    else:
                        k = imgSize / w
                        hCal = math.ceil(k * h)
                        if (height != 0 and width != 0):
                                imgResize = cv2.resize(imgCrop, (imgSize, hCal), interpolation=cv2.INTER_CUBIC)
                                hGap = math.ceil((imgSize - hCal) / 2)
                                imgWhite[hGap:hCal+hGap, :] = imgResize
                                prediction, index = classifier.getPrediction(imgWhite, draw=False)

                    if (height != 0 and width != 0):
                        cv2.rectangle(imgOutput, (x-offset, y-offset-50),
                                        (x-offset+90, y-offset-50+50), (255, 0, 255), cv2.FILLED),
                        cv2.putText(imgOutput, labels[index], (x, y-26), cv2.FONT_HERSHEY_COMPLEX, 1.7, (255, 255, 255), 2)
                        cv2.rectangle(imgOutput, (x-offset, y-offset),
                                        (x + w+offset, y + h+offset), (255, 0, 255), 4),

                self.interface.atualizar_letra(labels[index])

                
                ConvertToQtFormat = QImage(imgOutput.data, imgOutput.shape[1], imgOutput.shape[0], QImage.Format_RGB888)
                Pic = ConvertToQtFormat.scaled(imgOutput.shape[1] * 0.8, imgOutput.shape[0] * 0.8, Qt.KeepAspectRatio)
                self.ImageUpdate.emit(Pic)

    def stop(self):
        self.ThreadActive = False
        self.quit()


class Ui_Form(object):
    def setupUi(self, Form):
        self.Worker1 = Worker1(interface=self)

        Form.setObjectName("Form")
        Form.resize(625, 425)
        Form.setMinimumSize(QSize(625, 425))
        Form.setMaximumSize(QSize(625, 425))
        Form.setStyleSheet("background-color: rgb(88, 79, 135);\n"
"border-radius: 24px;")
        self.section_palavra = QFrame(Form)
        self.section_palavra.setGeometry(QRect(180, -120, 251, 181))
        self.section_palavra.setStyleSheet("background-color: rgb(48, 51, 71, 0.5);\n"
"border-radius: 39px;\n"
"")
        self.section_palavra.setFrameShape(QFrame.StyledPanel)
        self.section_palavra.setFrameShadow(QFrame.Raised)
        self.section_palavra.setObjectName("section_palavra")
        self.palavra = QTextBrowser(self.section_palavra)
        self.palavra.setGeometry(QRect(30, 120, 221, 61))
        self.palavra.setStyleSheet("letter-spacing: 10px; \n"
"background-color: transparent;\n"
"font-weight: bold; \n"
"color: rgb(250, 231, 93);")
        self.palavra.setObjectName("palavra")
        self.container_cam = QLabel(Form)
        self.container_cam.setGeometry(QRect(100, 140, 421, 271))
        self.container_cam.setStyleSheet("background-color: rgb(48, 51, 71, 0.5);")
        self.container_cam.setFrameShape(QFrame.StyledPanel)
        self.container_cam.setFrameShadow(QFrame.Raised)
        self.container_cam.setObjectName("container_cam")
        self.correct = QFrame(Form)
        self.correct.setGeometry(QRect(530, 320, 91, 101))
        self.correct.setStyleSheet("image: url(correct.png);\n"
"background-color: transparent;")
        self.correct.setFrameShape(QFrame.StyledPanel)
        self.correct.setFrameShadow(QFrame.Raised)
        self.correct.setObjectName("correct")
        self.hand = QFrame(Form)
        self.hand.setGeometry(QRect(-30, 290, 171, 161))
        self.hand.setStyleSheet("image: url(0.png);\n"
"background-color: transparent;")
        self.hand.setFrameShape(QFrame.StyledPanel)
        self.hand.setFrameShadow(QFrame.Raised)
        self.hand.setObjectName("hand")
        self.div_letters = QFrame(Form)
        self.div_letters.setGeometry(QRect(150, 110, 311, 21))
        self.div_letters.setFrameShape(QFrame.StyledPanel)
        self.div_letters.setFrameShadow(QFrame.Raised)
        self.div_letters.setObjectName("div_letters")
        self.horizontalLayout = QHBoxLayout(self.div_letters)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_5 = QFrame(self.div_letters)
        font = QFont()
        font.setItalic(False)
        self.frame_5.setFont(font)
        self.frame_5.setStyleSheet("background-color: rgb(250, 231, 93);\n"
"border-radius: 50px;\n"
"")
        self.frame_5.setFrameShape(QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout.addWidget(self.frame_5)
        self.frame_6 = QFrame(self.div_letters)
        font = QFont()
        font.setItalic(False)
        self.frame_6.setFont(font)
        self.frame_6.setStyleSheet("background-color: rgb(250, 231, 93);\n"
"border-radius: 50px;\n"
"")
        self.frame_6.setFrameShape(QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.horizontalLayout.addWidget(self.frame_6)
        self.frame_7 = QFrame(self.div_letters)
        font = QFont()
        font.setItalic(False)
        self.frame_7.setFont(font)
        self.frame_7.setStyleSheet("background-color: rgb(250, 231, 93);\n"
"border-radius: 50px;\n"
"")
        self.frame_7.setFrameShape(QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.horizontalLayout.addWidget(self.frame_7)
        self.frame_8 = QFrame(self.div_letters)
        font = QFont()
        font.setItalic(False)
        self.frame_8.setFont(font)
        self.frame_8.setStyleSheet("background-color: rgb(250, 231, 93);\n"
"border-radius: 50px;\n"
"")
        self.frame_8.setFrameShape(QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.horizontalLayout.addWidget(self.frame_8)
        self.frame_9 = QFrame(self.div_letters)
        font = QFont()
        font.setItalic(False)
        self.frame_9.setFont(font)
        self.frame_9.setStyleSheet("background-color: rgb(250, 231, 93);\n"
"border-radius: 50px;\n"
"")
        self.frame_9.setFrameShape(QFrame.StyledPanel)
        self.frame_9.setFrameShadow(QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.horizontalLayout.addWidget(self.frame_9)
        self.Letter2 = QTextBrowser(Form)
        self.Letter2.setGeometry(QRect(288, 60, 71, 81))
        self.Letter2.setStyleSheet("letter-spacing: 10px; \n"
"background-color: transparent;\n"
"font-weight: bold; \n"
"color: rgb(250, 231, 93);")
        self.Letter2.setObjectName("Letter2")
        self.Letter1 = QTextBrowser(Form)
        self.Letter1.setGeometry(QRect(229, 60, 53, 69))
        self.Letter1.setStyleSheet("letter-spacing: 10px; \n"
"background-color: transparent;\n"
"font-weight: bold; \n"
"color: rgb(250, 231, 93);")
        self.Letter1.setObjectName("Letter1")
        self.Letter0 = QTextBrowser(Form)
        self.Letter0.setGeometry(QRect(170, 60, 53, 69))
        self.Letter0.setStyleSheet("letter-spacing: 10px; \n"
"background-color: transparent;\n"
"font-weight: bold; \n"
"color: rgb(250, 231, 93);")
        self.Letter0.setObjectName("Letter0")
        self.Letter4 = QTextBrowser(Form)
        self.Letter4.setGeometry(QRect(406, 60, 53, 69))
        self.Letter4.setStyleSheet("letter-spacing: 10px; \n"
"background-color: transparent;\n"
"font-weight: bold; \n"
"color: rgb(250, 231, 93);\n"
"border: none;")
        self.Letter4.setObjectName("Letter4")
        self.Letter3 = QTextBrowser(Form)
        self.Letter3.setGeometry(QRect(347, 60, 53, 69))
        self.Letter3.setStyleSheet("letter-spacing: 10px; \n"
"background-color: transparent;\n"
"font-weight: bold; \n"
"color: rgb(250, 231, 93);")
        self.Letter3.setObjectName("Letter3")
        self.div_letters.raise_()
        self.hand.raise_()
        self.section_palavra.raise_()
        self.container_cam.raise_()
        self.correct.raise_()
        self.Letter2.raise_()
        self.Letter1.raise_()
        self.Letter0.raise_()
        self.Letter4.raise_()
        self.Letter3.raise_()

        self.retranslateUi(Form)
        QMetaObject.connectSlotsByName(Form)

        self.Worker1 = Worker1()

        self.Worker1.start()
        self.Worker1.ImageUpdate.connect(self.ImageUpdateSlot)

    def ImageUpdateSlot(self, Image):
        self.container_cam.setPixmap(QPixmap.fromImage(Image))

    def CancelFeed(self):
        self.Worker1.stop()

    def retranslateUi(self, Form):
        _translate = QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Hands On Game"))

        self.palavra.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:600; font-style:normal; letter-spacing:10px;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:30pt;\">SAMBA</span></p></body></html>"))

        self.Letter0.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                        "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                        "p, li { white-space: pre-wrap; }\n"
                                        "</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:600; font-style:normal; letter-spacing:10px;\">\n"
                                        "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; color:#ffffff;\">S</span></p></body></html>"))
        self.Letter1.setHtml(_translate("Form","<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                        "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                        "p, li { white-space: pre-wrap; }\n"
                                        "</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:600; font-style:normal; letter-spacing:10px;\">\n"
                                        "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; color:#ffffff;\">A</span></p></body></html>"))
        self.Letter2.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:600; font-style:normal; letter-spacing:10px;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; color:#ffffff;\">M</span></p></body></html>"))
        self.Letter3.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                        "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                        "p, li { white-space: pre-wrap; }\n"
                                        "</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:600; font-style:normal; letter-spacing:10px;\">\n"
                                        "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; color:#ffffff;\">B</span></p></body></html>"))
        self.Letter4.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:600; font-style:normal; letter-spacing:10px;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:36pt; color:#ffffff;\">A</span></p></body></html>"))

    def atualizar_letra(self, letra):
        """
        Atualiza o conteúdo HTML do QLabel para exibir a letra especificada.
        """
        conteudo_html = f"""
            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
            <html>
                <head>
                    <meta name="qrichtext" content="1" />
                    <style type="text/css">
                        p, li {{ white-space: pre-wrap; }}
                    </style>
                </head>
                <body style="font-family:'Ubuntu'; font-size:11pt; font-weight:600; font-style:normal; letter-spacing:10px;">
                    <p style="margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
                        <span style="font-size:36pt; color:#ffffff;">{letra}</span>
                    </p>
                </body>
            </html>
        """
        self.Letter0.setHtml(conteudo_html)



ui = Ui_Form()
worker = Worker1(interface=ui)

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    Form = QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

